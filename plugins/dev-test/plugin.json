{
    "name": "Dev Test",
    "id": "dev-test",
    "description": "Testing plugin for the client's developer",
    "author": "Dev",
    "src": [
        {
            "type": "startup",
            "src": "console.log(\"STARTUP script is working\");"
        },
        {
            "type": "preload",
            "src": "console.log(\"PRELOAD script is working\");"
        },
        {
            "type": "game",
            "src": "console.log(\"GAME script is working\");"
        },
        {
            "type": "domloaded",
            "src": "console.log(\"DOMLOADED script is working\");\n\nDRC.EventObject.addEventListener(DRC.Events.DomContentLoaded, () => console.log(\"DomContentLoaded event is working\"));\n\nDRC.EventObject.addEventListener(DRC.Events.DocumentLoaded, () => console.log(\"DocumentLoaded event is working\"));\n\nDRC.EventObject.addEventListener(DRC.Events.GameStarted, () => console.log(\"GameStarted event is working\"));\n\nDRC.EventObject.addEventListener(DRC.Events.GameEnded, () => console.log(\"GameEnded event is working\"));\n\nDRC.EventObject.addEventListener(DRC.Events.GameEvolved, () => console.log(\"GameEvolved event is working\"));\n\nDRC.EventObject.addEventListener(DRC.Events.SettingsOpened, () => console.log(\"SettingsOpened event is working\"));"
        },
        {
            "type": "appstart",
            "src": "console.log(\"APPSTART script is working\");"
        },
        {
            "type": "install",
            "src": "console.log(\"INSTALL script is working\");"
        },
        {
            "type": "uninstall",
            "src": "console.log(\"UNINSTALL script is working\");"
        }
    ]
}