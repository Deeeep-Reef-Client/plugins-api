{
    "name": "Background Music",
    "id": "background-music",
    "description": "Plays background music",
    "author": "Dev",
    "src": [
        {
            "type": "domloaded",
            "src": "// init setting if undefined\nif (settings.pluginUserData[\"background-music\"] === undefined || settings.pluginUserData[\"background-music\"].music === undefined) {\n    settings.pluginUserData[\"background-music\"] = { music: [] };\n    saveSettings();\n}\n\nlet backgroundmusic_musicElements = [];\n\nfor (let i in settings.pluginUserData[\"background-music\"].music) {\n    try {\n        let audioElement = new Audio(settings.pluginUserData[\"background-music\"].music[i].musicUrl);\n        backgroundmusic_musicElements.push({\n            trigger: settings.pluginUserData[\"background-music\"].music[i].trigger,\n            biome: settings.pluginUserData[\"background-music\"].music[i].biome ?? null,\n            audio: audioElement\n        });\n    } catch (e) {\n        new Notification(\"Failed to load music\", {\n            body: \"There was a problem when loading music. Check that the URL is not malformed.\"\n        });\n    }\n}\n\nlet TRIGGER_NAMES = {\n    ambient: \"Ambient\",\n    mainmenu: \"Main Menu\",\n    playing: \"Playing\",\n    biome: \"Biome\",\n    boost: \"On Boost\",\n    kill: \"On Kill\",\n    death: \"On Death\",\n    evolve: \"On Evolve\",\n    biomeChange: \"On Biome Change\"\n};\n\n// Style\nconst backgroundmusic_style = document.createElement(\"style\");\nbackgroundmusic_style.innerHTML = `\n.drcplugin-backgroundmusic-biome-checkbox-container {\n    display: grid;\n    grid-template-columns: auto auto auto;\n}\n\n.drcplugin-backgroundmusic-biome-checkbox-container > div > * {\n    vertical-align: middle;\n}\n\n.drcplugin-backgroundmusic-biome-checkbox-container > div > input:indeterminate {\n\n}\n`;\ndocument.head.appendChild(backgroundmusic_style);\n\n// Background music button\nconst backgroundmusic_openButtonWrapper = settingsButtonWrapper.cloneNode(true);\nconst backgroundmusic_openButton = backgroundmusic_openButtonWrapper.firstElementChild;\nbackgroundmusic_openButtonWrapper.setAttribute(\"id\", \"backgroundmusic_openButtonWrapper\");\nbackgroundmusic_openButton.setAttribute(\"id\", \"backgroundmusic_openButton\");\nbackgroundmusic_openButton.querySelector(\"span[class]\").innerHTML = `<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-music-note-beamed\" viewBox=\"0 0 16 16\">\n<path d=\"M6 13c0 1.105-1.12 2-2.5 2S1 14.105 1 13c0-1.104 1.12-2 2.5-2s2.5.896 2.5 2zm9-2c0 1.105-1.12 2-2.5 2s-2.5-.895-2.5-2 1.12-2 2.5-2 2.5.895 2.5 2z\"/>\n<path fill-rule=\"evenodd\" d=\"M14 11V2h1v9h-1zM6 3v10H5V3h1z\"/>\n<path d=\"M5 2.905a1 1 0 0 1 .9-.995l8-.8a1 1 0 0 1 1.1.995V3L5 4V2.905z\"/>\n</svg>`\ntopRightNav.insertBefore(backgroundmusic_openButtonWrapper, aboutDrcButtonWrapper);\n\nconst backgroundmusic_backgroundMusicManagerDiv = DRC.Modal.buildModal(\"backgroundmusic_\", \"Background Music\", `\n<button id=\"backgroundmusic_newButton\" class=\"assetswapper-new-button assetswapper-add-button\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\"\n                        class=\"bi bi-plus\" viewBox=\"0 0 16 16\">\n                        <path\n                            d=\"M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z\" />\n                    </svg>New</button>\n<div id=\"backgroundmusic_musicList\"></div>\n`);\n\nconst backgroundmusic_newButton = document.getElementById(\"backgroundmusic_newButton\");\nconst backgroundmusic_musicList = document.getElementById(\"backgroundmusic_musicList\");\n\nconst backgroundmusic_backgroundMusicNewDiv = DRC.Modal.buildModal(\"backgroundmusic_newMusic\", \"New Music\", `\n<div class=\"assetswapper-list-rule\">\n    <select id=\"backgroundmusic_OptionsTrigger\">\n        <option value=\"ambient\">Ambient</option>\n        <option value=\"mainmenu\">Main Menu</option>\n        <option value=\"playing\">Playing</option>\n        <option value=\"biome\">Biome</option>\n        <option value=\"boost\">On Boost</option>\n        <option value=\"kill\">On Kill</option>\n        <option value=\"death\">On Death</option>\n        <option value=\"evolve\">On Evolve</option>\n        <option value=\"biomeChange\">On Biome Change</option>\n    </select>\n    <div class=\"spacer\"></div>\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-soundwave\" viewBox=\"0 0 16 16\">\n        <path fill-rule=\"evenodd\" d=\"M8.5 2a.5.5 0 0 1 .5.5v11a.5.5 0 0 1-1 0v-11a.5.5 0 0 1 .5-.5zm-2 2a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7a.5.5 0 0 1 .5-.5zm4 0a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7a.5.5 0 0 1 .5-.5zm-6 1.5A.5.5 0 0 1 5 6v4a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm8 0a.5.5 0 0 1 .5.5v4a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm-10 1A.5.5 0 0 1 3 7v2a.5.5 0 0 1-1 0V7a.5.5 0 0 1 .5-.5zm12 0a.5.5 0 0 1 .5.5v2a.5.5 0 0 1-1 0V7a.5.5 0 0 1 .5-.5z\"/>\n    </svg>\n    <div class=\"spacer\"></div>\n    <input type=\"text\" id=\"backgroundmusic_OptionsMusic\" placeholder=\"Music URL\">\n</div>\n<div id=\"backgroundmusic_biomeSelection\" class=\"drc-modal-hidden\">\n    <div class=\"spacer\"></div>\n    <b>Biome</b>\n    <div class=\"drcplugin-backgroundmusic-biome-checkbox-container\">\n        <div>\n            <input type=\"checkbox\" id=\"backgroundmusic_BiomeCold\" />\n            <label for=\"backgroundmusic_BiomeCold\">Cold</label>\n        </div>\n        <div>\n            <input type=\"checkbox\" id=\"backgroundmusic_BiomeWarm\" />\n            <label for=\"backgroundmusic_BiomeWarm\">Warm</label>\n        </div>\n        <div>\n            <input type=\"checkbox\" id=\"backgroundmusic_BiomeShallow\" />\n            <label for=\"backgroundmusic_BiomeShallow\">Shallow</label>\n        </div>\n        <div>\n            <input type=\"checkbox\" id=\"backgroundmusic_BiomeDeep\" />\n            <label for=\"backgroundmusic_BiomeDeep\">Deep</label>\n        </div>\n        <div>\n            <input type=\"checkbox\" id=\"backgroundmusic_BiomeFresh\" />\n            <label for=\"backgroundmusic_BiomeFresh\">Fresh</label>\n        </div>\n        <div>\n            <input type=\"checkbox\" id=\"backgroundmusic_BiomeSalt\" />\n            <label for=\"backgroundmusic_BiomeSalt\">Salt</label>\n        </div>\n    </div>\n</div>\n<button id=\"backgroundmusic_addButton\" class=\"assetswapper-add-button\">Add</button>\n`, true);\n\nconst backgroundmusic_OptionsTrigger = document.getElementById(\"backgroundmusic_OptionsTrigger\");\nconst backgroundmusic_OptionsMusic = document.getElementById(\"backgroundmusic_OptionsMusic\");\nconst backgroundmusic_addButton = document.getElementById(\"backgroundmusic_addButton\");\nconst backgroundmusic_biomeSelection = document.getElementById(\"backgroundmusic_biomeSelection\");\nconst backgroundmusic_BiomeCold = document.getElementById(\"backgroundmusic_BiomeCold\");\nconst backgroundmusic_BiomeWarm = document.getElementById(\"backgroundmusic_BiomeWarm\");\nconst backgroundmusic_BiomeShallow = document.getElementById(\"backgroundmusic_BiomeShallow\");\nconst backgroundmusic_BiomeDeep = document.getElementById(\"backgroundmusic_BiomeDeep\");\nconst backgroundmusic_BiomeFresh = document.getElementById(\"backgroundmusic_BiomeFresh\");\nconst backgroundmusic_BiomeSalt = document.getElementById(\"backgroundmusic_BiomeSalt\");\n\nbackgroundmusic_OptionsTrigger.addEventListener(\"change\", () => {\n    if (backgroundmusic_OptionsTrigger.value === \"biome\") backgroundmusic_biomeSelection.classList.remove(\"drc-modal-hidden\");\n    else backgroundmusic_biomeSelection.classList.add(\"drc-modal-hidden\");\n});\n\nfunction backgroundmusic_makeHabitatCheckbox(checkbox) {\n    let state = 0;\n\n    checkbox.addEventListener(\"change\", () => {\n        state = state < 2 ? state + 1 : 0;\n\n        if (state === 0) {\n            checkbox.checked = false;\n            checkbox.indeterminate = false;\n        } else if (state === 1) {\n            checkbox.checked = true;\n            checkbox.indeterminate = false;\n        } else {\n            checkbox.checked = false;\n            checkbox.indeterminate = true;\n        }\n    });\n}\n\nbackgroundmusic_makeHabitatCheckbox(backgroundmusic_BiomeCold);\nbackgroundmusic_makeHabitatCheckbox(backgroundmusic_BiomeWarm);\nbackgroundmusic_makeHabitatCheckbox(backgroundmusic_BiomeShallow);\nbackgroundmusic_makeHabitatCheckbox(backgroundmusic_BiomeDeep);\nbackgroundmusic_makeHabitatCheckbox(backgroundmusic_BiomeFresh);\nbackgroundmusic_makeHabitatCheckbox(backgroundmusic_BiomeSalt);\n\nfunction backgroundmusic_updateMusicList() {\n    backgroundmusic_musicList.innerHTML = \"\";\n    for (let i in settings.pluginUserData[\"background-music\"].music) {\n        const mainElem = document.createElement(\"div\");\n        mainElem.classList.add(\"assetswapper-list-rule\");\n        // Trigger\n        const triggerElem = document.createElement(\"p\");\n        triggerElem.innerText = TRIGGER_NAMES[settings.pluginUserData[\"background-music\"].music[i].trigger];\n        if (settings.pluginUserData[\"background-music\"].music[i].trigger === \"biome\") {\n            const biome = settings.pluginUserData[\"background-music\"].music[i].biome;\n            const biomeNames = [];\n\n            if (biome.cold === true) biomeNames.push(\"Cold\");\n            else if (biome.cold === false) biomeNames.push(\"No Cold\");\n\n            if (biome.warm === true) biomeNames.push(\"Warm\");\n            else if (biome.warm === false) biomeNames.push(\"No Warm\");\n\n            if (biome.shallow === true) biomeNames.push(\"Shallow\");\n            else if (biome.shallow === false) biomeNames.push(\"No Shallow\");\n\n            if (biome.deep === true) biomeNames.push(\"Deep\");\n            else if (biome.deep === false) biomeNames.push(\"No Deep\");\n\n            if (biome.fresh === true) biomeNames.push(\"Fresh\");\n            else if (biome.fresh === false) biomeNames.push(\"No Fresh\");\n\n            if (biome.salt === true) biomeNames.push(\"Salt\");\n            else if (biome.salt === false) biomeNames.push(\"No Salt\");\n\n            triggerElem.innerText += \" (\" + biomeNames.join(\", \") + \")\";\n        }\n        mainElem.appendChild(triggerElem);\n        const spacer1 = document.createElement(\"div\");\n        spacer1.classList.add(\"spacer\");\n        mainElem.appendChild(spacer1);\n        // sound icon\n        const iconElem = document.createElement(\"div\");\n        mainElem.appendChild(iconElem);\n        iconElem.outerHTML = `<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-soundwave\" viewBox=\"0 0 16 16\">\n      <path fill-rule=\"evenodd\" d=\"M8.5 2a.5.5 0 0 1 .5.5v11a.5.5 0 0 1-1 0v-11a.5.5 0 0 1 .5-.5zm-2 2a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7a.5.5 0 0 1 .5-.5zm4 0a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7a.5.5 0 0 1 .5-.5zm-6 1.5A.5.5 0 0 1 5 6v4a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm8 0a.5.5 0 0 1 .5.5v4a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm-10 1A.5.5 0 0 1 3 7v2a.5.5 0 0 1-1 0V7a.5.5 0 0 1 .5-.5zm12 0a.5.5 0 0 1 .5.5v2a.5.5 0 0 1-1 0V7a.5.5 0 0 1 .5-.5z\"/>\n      </svg>`;\n        const spacer2 = document.createElement(\"div\");\n        spacer2.classList.add(\"spacer\");\n        mainElem.appendChild(spacer2);\n        // Music URL\n        const musicElem = document.createElement(\"p\");\n        musicElem.innerText = settings.pluginUserData[\"background-music\"].music[i].musicUrl;\n        mainElem.appendChild(musicElem);\n        const spacer3 = document.createElement(\"div\");\n        spacer3.classList.add(\"spacer\");\n        mainElem.appendChild(spacer3);\n        // Delete button\n        const deleteElem = document.createElement(\"button\");\n        deleteElem.classList.add(\"assetswapper-new-button\");\n        deleteElem.innerText = \"Delete\";\n        deleteElem.addEventListener(\"click\", () => {\n            settings.pluginUserData[\"background-music\"].music = settings.pluginUserData[\"background-music\"].music.filter(item => item != settings.pluginUserData[\"background-music\"].music[i]);\n            saveSettings();\n            backgroundmusic_updateMusicList();\n        });\n        mainElem.appendChild(deleteElem);\n        backgroundmusic_musicList.appendChild(mainElem);\n    }\n}\n\nfunction backgroundmusic_clearBiomeSelection() {\n    backgroundmusic_BiomeCold.checked = false;\n    backgroundmusic_BiomeWarm.checked = false;\n    backgroundmusic_BiomeShallow.checked = false;\n    backgroundmusic_BiomeDeep.checked = false;\n    backgroundmusic_BiomeFresh.checked = false;\n    backgroundmusic_BiomeSalt.checked = false;\n}\n\nbackgroundmusic_addButton.addEventListener(\"click\", () => {\n    const music = {\n        trigger: backgroundmusic_OptionsTrigger.value,\n        musicUrl: backgroundmusic_OptionsMusic.value,\n    };\n\n    if (backgroundmusic_OptionsTrigger.value === \"biome\") {\n        music.biome = {\n            cold: null,\n            warm: null,\n            shallow: null,\n            deep: null,\n            fresh: null,\n            salt: null\n        };\n\n        if (backgroundmusic_BiomeCold.indeterminate) music.biome.cold = false;\n        else if (backgroundmusic_BiomeCold.checked) music.biome.cold = true;\n\n        if (backgroundmusic_BiomeWarm.indeterminate) music.biome.warm = false;\n        else if (backgroundmusic_BiomeWarm.checked) music.biome.warm = true;\n\n        if (backgroundmusic_BiomeShallow.indeterminate) music.biome.shallow = false;\n        else if (backgroundmusic_BiomeShallow.checked) music.biome.shallow = true;\n\n        if (backgroundmusic_BiomeDeep.indeterminate) music.biome.deep = false;\n        else if (backgroundmusic_BiomeDeep.checked) music.biome.deep = true;\n\n        if (backgroundmusic_BiomeFresh.indeterminate) music.biome.fresh = false;\n        else if (backgroundmusic_BiomeFresh.checked) music.biome.fresh = true;\n\n        if (backgroundmusic_BiomeSalt.indeterminate) music.biome.salt = false;\n        else if (backgroundmusic_BiomeSalt.checked) music.biome.salt = true;\n    }\n\n    settings.pluginUserData[\"background-music\"].music.push(music);\n\n    saveSettings();\n    backgroundmusic_updateMusicList();\n    backgroundmusic_backgroundMusicNewDiv.classList.add(\"drc-modal-hidden\");\n\n    backgroundmusic_OptionsTrigger.value = \"ambient\";\n    backgroundmusic_biomeSelection.classList.add(\"drc-modal-hidden\");\n    backgroundmusic_clearBiomeSelection();\n\n    new Notification(\"Music saved!\", {\n        body: \"Your background music has been saved.\"\n    });\n});\n\nbackgroundmusic_openButton.addEventListener(\"click\", () => {\n    backgroundmusic_updateMusicList();\n\n    backgroundmusic_backgroundMusicManagerDiv.classList.toggle(\"drc-modal-hidden\");\n});\n\nbackgroundmusic_newButton.addEventListener(\"click\", () => {\n    backgroundmusic_OptionsTrigger.value = \"ambient\";\n    backgroundmusic_OptionsMusic.value = \"\";\n\n    backgroundmusic_backgroundMusicNewDiv.classList.toggle(\"drc-modal-hidden\");\n});\n\n// All the music logic\n\n// Interval for checking changes\nlet backgroundmusic_checkInterval;\n\nlet backgroundmusic_lastArea = null;\n\nfunction backgroundmusic_intervalChecker() {\n    DRC.Preload.evalInBrowserContext(`\n        if (game.currentScene.myAnimal) window.drcplugin_backgroundmusic.mainWorldChecker(game.currentScene.myAnimal.currentArea);\n    `);\n}\n\nfunction backgroundmusic_mainWorldChecker(currentArea) {\n    if (backgroundmusic_lastArea === null) backgroundmusic_lastArea = currentArea;\n\n    // Biome change\n    if (currentArea !== backgroundmusic_lastArea) {\n        backgroundmusic_musicElements.filter(m => m.trigger === \"biomeChange\").forEach(m => {\n            console.log(\"Biome change music played\");\n            m.audio.currentTime = 0;\n            m.audio.play();\n        });\n\n        backgroundmusic_lastArea = currentArea;\n\n        backgroundmusic_musicElements.filter(m => m.trigger === \"biome\").forEach(m => {\n            m.audio.pause();\n        });\n\n        const habitatArray = DRC.Utils.habitatToArray(currentArea);\n\n        backgroundmusic_musicElements.filter(m => {\n            if (m.trigger === \"biome\") {\n                if (\n                    (m.biome.cold === true && !habitatArray.includes(\"Cold\"))\n                    || (m.biome.cold === false && habitatArray.includes(\"Cold\"))\n\n                    || (m.biome.warm === true && !habitatArray.includes(\"Warm\"))\n                    || (m.biome.warm === false && habitatArray.includes(\"Warm\"))\n\n                    || (m.biome.shallow === true && !habitatArray.includes(\"Shallow\"))\n                    || (m.biome.shallow === false && habitatArray.includes(\"Shallow\"))\n\n                    || (m.biome.deep === true && !habitatArray.includes(\"Deep\"))\n                    || (m.biome.deep === false && habitatArray.includes(\"Deep\"))\n\n                    || (m.biome.fresh === true && !habitatArray.includes(\"Fresh\"))\n                    || (m.biome.fresh === false && habitatArray.includes(\"Fresh\"))\n\n                    || (m.biome.salt === true && !habitatArray.includes(\"Salt\"))\n                    || (m.biome.salt === false && habitatArray.includes(\"Salt\"))\n                ) return false;\n\n                return true;\n            } else return false;\n        }).forEach(m => {\n            console.log(\"Biome music played\");\n            m.audio.loop = true;\n            m.audio.play();\n        });\n    }\n}\n\n// Expose checker to main world\ncontextBridge.exposeInMainWorld(\"drcplugin_backgroundmusic\", {\n    mainWorldChecker: backgroundmusic_mainWorldChecker\n});\n\n// Ambient\nbackgroundmusic_musicElements.filter(m => m.trigger === \"ambient\").forEach(m => {\n    console.log(\"Ambient music played\");\n    m.audio.loop = true;\n    m.audio.play();\n});\n\n// Main Menu\nbackgroundmusic_musicElements.filter(m => m.trigger === \"mainmenu\").forEach(m => {\n    console.log(\"Main Menu music played\");\n    m.audio.currentTime = 0;\n    m.audio.loop = true;\n    m.audio.play();\n});\n\nDRC.EventObject.addEventListener(DRC.Events.GameStarted, () => {\n    // Playing\n    console.log(\"Playing music played\");\n\n    backgroundmusic_musicElements.filter(m => m.trigger === \"playing\").forEach(m => {\n        m.audio.currentTime = 0;\n        m.audio.loop = true;\n        m.audio.play();\n    });\n\n    // Main Menu\n    console.log(\"Main Menu music stopped\");\n\n    backgroundmusic_musicElements.filter(m => m.trigger === \"mainmenu\").forEach(m => {\n        m.audio.pause();\n    });\n\n    // Interval\n    backgroundmusic_checkInterval = setInterval(backgroundmusic_intervalChecker, 200);\n});\n\nDRC.EventObject.addEventListener(DRC.Events.GameEnded, () => {\n    // Playing\n    console.log(\"Playing music stopped\");\n    backgroundmusic_musicElements.filter(m => m.trigger === \"playing\").forEach(m => {\n        m.audio.pause();\n    });\n\n    // Main Menu\n    backgroundmusic_musicElements.filter(m => m.trigger === \"mainmenu\").forEach(m => {\n        console.log(\"Main Menu music played\");\n        m.audio.currentTime = 0;\n        m.audio.play();\n    });\n\n    // Interval\n    clearInterval(backgroundmusic_checkInterval);\n    backgroundmusic_lastArea = null;\n});\n\nDRC.EventObject.addEventListener(DRC.Events.GameEvolved, () => {\n    // Evolve\n    backgroundmusic_musicElements.filter(m => m.trigger === \"evolve\").forEach(m => {\n        console.log(\"Evolve music played\");\n        m.audio.currentTime = 0;\n        m.audio.play();\n    });\n});\n\nDRC.EventObject.addEventListener(DRC.Events.GameBoost, () => {\n    // Boost\n    backgroundmusic_musicElements.filter(m => m.trigger === \"boost\").forEach(m => {\n        console.log(\"Boost music played\");\n        m.audio.currentTime = 0;\n        m.audio.play();\n    });\n});"
        },
        {
            "type": "install",
            "src": "settings.pluginUserData[\"background-music\"] = { music: [] };"
        }
    ]
}